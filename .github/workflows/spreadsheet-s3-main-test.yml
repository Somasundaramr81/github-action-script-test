name: spreadsheet-s3-test-main
on:
  push:
    branches:
      - main
    paths: 'en-us.json'
jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: 8BitJonny/gh-get-current-pr@1.3.0
        id: PR
        with:
          github-token: ${{ secrets.GIT_TOKEN }}
          sha: ${{ github.event.pull_request.head.sha }}
      - uses: technote-space/get-diff-action@v5
      - run: |
          echo "Newly added fields" >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- en-us.json -U0 | { grep '^[+]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- en-us.json -U0 | { grep '^[+]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> new-changes.json
      - run: |
          echo "Removed fields (if any)" >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- en-us.json -U0 | { grep '^[-]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> diff-text.txt
          git diff ${{ github.event.before }} ${{ github.sha }} -- en-us.json -U0 | { grep '^[-]' || true; } | { grep -Ev '^(--- a/|\+\+\+ b/)' || true; } >> removed-changes.json
      - shell: bash
        run: |  
          echo "${{ steps.PR.outputs.pr_body }}" | sed -e 's/|/\\|/g' > pr-details-for-screenshot.txt   
      - shell: bash
        run: |
          if grep -q "images" pr-details-for-screenshot.txt; then
            grep http ./pr-details-for-screenshot.txt | sed 's/http/\nhttp/g' | { grep ^http || true; } | sed 's/\(^http[^ <]*\)\(.*\)/\1/g' > pr-details-for-screenshot.txt
          fi
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: screenshot
          path: pr-details-for-screenshot.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: screenshot
      - name: get Pull Request URL
        uses: kceb/pull-request-url-action@v1
        id: pr-url
      - run: echo "The Pull Request URL is ${{ steps.pr-url.outputs.url }}" >> diff-text.txt
      - name: iterate screenshot file
        run: |
            i=1
            while read p; do
              url=$(echo $p | tr -d '>' | tr -d $'\r' | tr -d ')')
              if [[ $url =~ "images" ]]; then
                curl "$url" -o artifacts/screenshot${i}.png
                i=$((i+1))
              elif [[ $url =~ "freshrelease" ]]; then
                echo $url
                if [[ $url =~ "|" ]]; then
                  echo "The corresponding freshrelease ticket is" >> diff-text.txt
                  echo $url | grep -Eo "(http|https)://[a-zA-Z0-9./?=_%:-]*" >> diff-text.txt
                  echo "The PR url is ${{ github.event.number }} ${{ steps.pr-url.outputs.url }}"
                else
                  echo "The corresponding freshrelease ticket is $url " >> diff-text.txt
                fi
              fi
            done < pr-details-for-screenshot.txt
      - name: upload git diff to artifact
        uses: actions/upload-artifact@v2
        with:
          name: difftext
          path: diff-text.txt
      - name: Download the diff text artifact
        uses: actions/download-artifact@v2
        with:
          name: difftext
      - name: iterate new json file
        run: |
            if [ -s new-changes.json ]; then
              echo "[" >> construct-array.txt
              while read p; do
                echo "[" >> construct-array.txt
                p=$(echo $p | sed 'y/+/ /')
                p=$(echo $p | sed 's/,/], /g')
                p=$(echo $p | sed 's/:/,/g')
                echo $p >> construct-array.txt
              done < new-changes.json
              echo "]]" >> construct-array.txt
            fi
            if [ -s removed-changes.json ]; then
              echo "[" >> construct-remove-array.txt
              while read p; do
                echo "[" >> construct-remove-array.txt
                p=$(echo $p | sed 'y/-/ /')
                p=$(echo $p | sed 's/,/], /g')
                p=$(echo $p | sed 's/:/,/g')
                echo $p >> construct-remove-array.txt
              done < removed-changes.json
              echo "]]" >> construct-remove-array.txt
            fi
      - name: Set json array in git variable
        id: "json_array"
        run: |
          echo "REMOVED_KEYS_FOUND=$(echo false)" >> $GITHUB_ENV
          echo "NEW_KEYS_FOUND=$(echo false)" >> $GITHUB_ENV
          if [ -s new-changes.json ]; then
            JSON=$(cat ./construct-array.txt)
            JSON=$(echo $JSON | sed 's/, ]]/]/g')
            echo "GITHUB_TESTING=$(echo $JSON)" >> $GITHUB_ENV
            echo "NEW_KEYS_FOUND=$(echo true)" >> $GITHUB_ENV
          fi
          if [ -s removed-changes.json ]; then
            JSON=$(cat ./construct-remove-array.txt)
            JSON=$(echo $JSON | sed 's/, ]]/]/g')
            echo "GITHUB_REMOVED=$(echo $JSON)" >> $GITHUB_ENV
            echo "REMOVED_KEYS_FOUND=$(echo true)" >> $GITHUB_ENV
          fi
      - name: update new keys
        id: 'update_worksheet'
        if: ${{ env.NEW_KEYS_FOUND == 'true'}}
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: 1q4xe6hiAIVske50DorSHsMtkslzEJMuxwJtcxQL5RaM
          commands: | 
            [
              { "command": "getWorksheet", "args": { "worksheetTitle": "new demo sheet" }},
              { "command": "appendData", "args": { "data": [["NEWLY ADDED KEYS"]] , "minCol": 1}},
              { "command": "appendData", "args": { "data": ${{ env.GITHUB_TESTING }} , "minCol": 1}}
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEETS_GSERVICE_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEETS_FULL_PRIVATE_KEY }}
      - name: update removed keys
        id: 'update_removed_keys_worksheet'
        if: ${{ env.REMOVED_KEYS_FOUND == 'true' }}
        uses: jroehl/gsheet.action@v1.0.0
        with:
          spreadsheetId: 1q4xe6hiAIVske50DorSHsMtkslzEJMuxwJtcxQL5RaM
          commands: | 
            [
              { "command": "getWorksheet", "args": { "worksheetTitle": "new demo sheet" }},
              { "command": "appendData", "args": { "data": [["REMOVED KEYS"]] , "minCol": 1}},
              { "command": "appendData", "args": { "data": ${{ env.GITHUB_REMOVED }} , "minCol": 1}}
            ]
        env:
          GSHEET_CLIENT_EMAIL: ${{ secrets.GSHEETS_GSERVICE_EMAIL }}
          GSHEET_PRIVATE_KEY: ${{ secrets.GSHEETS_FULL_PRIVATE_KEY }}
#       - uses: jakejarvis/s3-sync-action@master
#         with:
#           args: --acl public-read --follow-symlinks --delete --exclude '.git/*'
#         env:
#           AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
#           AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
#           AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY }}
      - uses: shallwefootball/s3-upload-action@master
        name: Upload S3
        id: S3
        with:
          aws_key_id: ${{ secrets.AWS_KEY_ID }}
          aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY}}
          aws_bucket: ${{ secrets.AWS_BUCKET }}
          source_dir: 'artifacts'
      - run: |
          echo "hello"
          echo ${{ steps.S3 }}
#       - name: copy file to  s3
#         shell: bash
#         env:
#           aws_key_id: ${{ secrets.AWS_KEY_ID }}
#           aws_secret_access_key: ${{ secrets.AWS_ACCESS_KEY }}
#           aws_s3_bucket: ${{ secrets.AWS_BUCKET }}
#         run: |
#           sudo apt-get update && sudo apt-get -y install awscli
#           aws configure set aws_access_key_id $aws_key_id
#           aws configure set aws_secret_access_key $aws_secret_access_key 
#           aws configure set default.region us-east-1
#           aws s3 artifacts/*.png s3://$aws_s3_bucket/
      - name: Send mail
        uses: dawidd6/action-send-mail@v3
        with:
          # Required mail server address:
          server_address: smtp.gmail.com
          # Required mail server port:
          server_port: 465
          # Optional (recommended): mail server username:
          username: ${{secrets.MAIL_USERNAME}}
          # Optional (recommended) mail server password:
          password: ${{secrets.MAIL_PASSWORD}}
          # Required mail subject:
          subject: new screenshot download test
          # Required recipients' addresses:
          to: tester101r81@gmail.com
          # Required sender full name (address can be skipped):
          from: Testser # <user@example.com>
          # Optional whether this connection use TLS (default is true if server_port is 465)
          secure: true
          body: no screen shot test
          html_body: no screen shot test
          cc: tester101r81@gmail.com
          bcc: tester101r81@gmail.com
          reply_to: tester101r81@gmail.com
          in_reply_to: <tester101r81@gmail.com>
          ignore_cert: true
          convert_markdown: true
          attachments: artifacts/*.png, diff-text.txt
          priority: low
